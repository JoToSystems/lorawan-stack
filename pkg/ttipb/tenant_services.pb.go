// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lorawan-stack/api/tti/tenant_services.proto

package ttipb

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	golang_proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

func init() {
	proto.RegisterFile("lorawan-stack/api/tti/tenant_services.proto", fileDescriptor_f411f114fe8fe8a6)
}
func init() {
	golang_proto.RegisterFile("lorawan-stack/api/tti/tenant_services.proto", fileDescriptor_f411f114fe8fe8a6)
}

var fileDescriptor_f411f114fe8fe8a6 = []byte{
	// 603 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x3d, 0x48, 0x1c, 0x4f,
	0x14, 0x9f, 0xf9, 0xff, 0xc3, 0x21, 0x03, 0x91, 0x64, 0x12, 0x0c, 0x9c, 0xf2, 0x12, 0x57, 0x41,
	0x30, 0x38, 0x4b, 0x62, 0x91, 0x90, 0x34, 0xc1, 0x78, 0x39, 0x84, 0x54, 0xc1, 0x6b, 0x6c, 0xc2,
	0xe8, 0x8d, 0xeb, 0xe0, 0x65, 0xf7, 0xdc, 0x79, 0x2a, 0x26, 0x08, 0x92, 0x4a, 0x52, 0x05, 0xd2,
	0xa4, 0x0c, 0x81, 0x80, 0xa5, 0x45, 0x0a, 0x4b, 0x4b, 0x4b, 0x21, 0x8d, 0xa5, 0x3b, 0x9b, 0xc2,
	0xd2, 0xd2, 0x32, 0xdc, 0x7e, 0x9c, 0x9e, 0xb7, 0xd1, 0x4b, 0x77, 0xf7, 0xe6, 0xf7, 0x35, 0xef,
	0xbd, 0x1d, 0xf6, 0xb0, 0x11, 0x84, 0x72, 0x5d, 0xfa, 0x13, 0x06, 0xe5, 0xc2, 0xb2, 0x2b, 0x9b,
	0xda, 0x45, 0xd4, 0x2e, 0x2a, 0x5f, 0xfa, 0xf8, 0xd6, 0xa8, 0x70, 0x4d, 0x2f, 0x28, 0x23, 0x9a,
	0x61, 0x80, 0x01, 0xef, 0x47, 0xd4, 0x22, 0x23, 0x88, 0xb5, 0xc9, 0xf2, 0x90, 0x17, 0x04, 0x5e,
	0x43, 0x25, 0x2c, 0xe9, 0xfb, 0x01, 0x4a, 0xd4, 0x81, 0x9f, 0xa1, 0xcb, 0x83, 0xd9, 0x69, 0xf2,
	0x6f, 0x7e, 0x75, 0xd1, 0x55, 0xef, 0x9a, 0xb8, 0x91, 0x1d, 0x8e, 0x15, 0xfb, 0xea, 0xba, 0xf2,
	0x51, 0x2f, 0x6a, 0x15, 0xe6, 0x2a, 0xce, 0x55, 0x01, 0x53, 0xcc, 0xe3, 0x9f, 0x7d, 0xac, 0x7f,
	0x36, 0x29, 0xbc, 0x51, 0x9e, 0x36, 0x18, 0x6e, 0xf0, 0x39, 0x56, 0x7a, 0x19, 0x2a, 0x89, 0x8a,
	0x8f, 0x88, 0xce, 0xd4, 0x22, 0xad, 0xe7, 0xf8, 0x95, 0x55, 0x65, 0xb0, 0x3c, 0x70, 0x19, 0x94,
	0x1e, 0x3b, 0x77, 0x3e, 0xfe, 0xfa, 0xfd, 0xe5, 0xbf, 0x9b, 0x4e, 0x5f, 0x66, 0x68, 0x9e, 0xd1,
	0x71, 0xbe, 0xc4, 0xfe, 0xaf, 0x2a, 0xe4, 0x0f, 0x2e, 0x73, 0xaa, 0x0a, 0x7b, 0x53, 0x1d, 0x4b,
	0x54, 0x87, 0xf9, 0xfd, 0x5c, 0xd5, 0xfd, 0x90, 0x35, 0x5c, 0xd7, 0x8d, 0x68, 0xff, 0xdc, 0xe4,
	0xdf, 0x29, 0xbb, 0x5d, 0x55, 0xed, 0x5b, 0xcd, 0x06, 0x28, 0x1b, 0x86, 0x8b, 0x2b, 0x8c, 0x2f,
	0x02, 0xf3, 0x18, 0xa3, 0xc5, 0x31, 0x3a, 0xc1, 0xce, 0x93, 0x24, 0xd4, 0x23, 0xee, 0x5e, 0x13,
	0xca, 0x0d, 0x33, 0xde, 0x04, 0xa6, 0x71, 0x6a, 0xec, 0xc6, 0x6b, 0x6d, 0x90, 0x3b, 0x97, 0x6d,
	0x5a, 0xd5, 0xd4, 0xaa, 0x1d, 0xe5, 0x5e, 0x71, 0x14, 0xe3, 0xdc, 0x4a, 0xdc, 0x19, 0x6f, 0x37,
	0x9a, 0xaf, 0xb0, 0x52, 0xad, 0x59, 0x2f, 0x9c, 0x60, 0x5a, 0xef, 0xad, 0xd7, 0xe3, 0x89, 0xf0,
	0x68, 0xb9, 0xab, 0xd7, 0xa2, 0xf3, 0x5a, 0xad, 0xc1, 0x4a, 0x56, 0x9a, 0x56, 0x0d, 0x85, 0x8a,
	0x0f, 0x17, 0xab, 0xcd, 0x9c, 0xaf, 0x67, 0x79, 0x40, 0xa4, 0xfb, 0x2d, 0xf2, 0xfd, 0x16, 0x95,
	0xd6, 0x7e, 0x3b, 0x43, 0x89, 0xe1, 0xc0, 0xf8, 0xdd, 0x82, 0x3e, 0x6e, 0xf2, 0x2d, 0xca, 0xa0,
	0xaa, 0x2e, 0x0a, 0xbd, 0x0a, 0xc2, 0x8a, 0x5f, 0x9f, 0x56, 0xad, 0x0f, 0xad, 0x52, 0x9b, 0x31,
	0xfc, 0xf9, 0x5f, 0xc7, 0x7b, 0x05, 0x2b, 0x6f, 0xc3, 0xf5, 0xc1, 0xf9, 0x7b, 0x36, 0xd8, 0x95,
	0xa0, 0x2a, 0x51, 0xad, 0xcb, 0x8d, 0x4a, 0x6d, 0x86, 0x3f, 0xed, 0xd1, 0xfe, 0x9c, 0xf2, 0x0f,
	0xde, 0x9f, 0x28, 0x1b, 0xe9, 0x32, 0x9f, 0xd2, 0x8d, 0x86, 0xf6, 0xbd, 0x8b, 0xb8, 0x17, 0x3d,
	0x86, 0xe8, 0xa6, 0xf6, 0x1e, 0x66, 0xea, 0x07, 0x3d, 0x88, 0x80, 0x1e, 0x46, 0x40, 0x8f, 0x22,
	0x20, 0xc7, 0x11, 0x90, 0x93, 0x08, 0xc8, 0x69, 0x04, 0xe4, 0x2c, 0x02, 0xba, 0x65, 0x81, 0x6e,
	0x5b, 0x20, 0x3b, 0x16, 0xe8, 0xae, 0x05, 0xb2, 0x67, 0x81, 0xec, 0x5b, 0x20, 0x07, 0x16, 0xe8,
	0xa1, 0x05, 0x7a, 0x64, 0x81, 0x1c, 0x5b, 0xa0, 0x27, 0x16, 0xc8, 0xa9, 0x05, 0x7a, 0x66, 0x81,
	0x6c, 0xc5, 0x40, 0xb6, 0x63, 0xa0, 0x9f, 0x63, 0x20, 0x5f, 0x63, 0xa0, 0xdf, 0x62, 0x20, 0x3b,
	0x31, 0x90, 0xdd, 0x18, 0xe8, 0x5e, 0x0c, 0x74, 0x3f, 0x06, 0x3a, 0xe7, 0x7a, 0x81, 0xc0, 0x25,
	0x85, 0x4b, 0xda, 0xf7, 0x8c, 0xf0, 0x15, 0xae, 0x07, 0xe1, 0xb2, 0xdb, 0xf9, 0xcc, 0xad, 0x4d,
	0xba, 0xcd, 0x65, 0xaf, 0xf5, 0xd2, 0x35, 0xe7, 0xe7, 0x4b, 0xc9, 0x86, 0x4d, 0xfe, 0x09, 0x00,
	0x00, 0xff, 0xff, 0x32, 0xd4, 0xdf, 0x3f, 0xac, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TenantRegistryClient is the client API for TenantRegistry service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TenantRegistryClient interface {
	Create(ctx context.Context, in *CreateTenantRequest, opts ...grpc.CallOption) (*Tenant, error)
	Get(ctx context.Context, in *GetTenantRequest, opts ...grpc.CallOption) (*Tenant, error)
	GetRegistryTotals(ctx context.Context, in *GetTenantRegistryTotalsRequest, opts ...grpc.CallOption) (*TenantRegistryTotals, error)
	List(ctx context.Context, in *ListTenantsRequest, opts ...grpc.CallOption) (*Tenants, error)
	Update(ctx context.Context, in *UpdateTenantRequest, opts ...grpc.CallOption) (*Tenant, error)
	Delete(ctx context.Context, in *TenantIdentifiers, opts ...grpc.CallOption) (*types.Empty, error)
	GetIdentifiersForEndDeviceEUIs(ctx context.Context, in *GetTenantIdentifiersForEndDeviceEUIsRequest, opts ...grpc.CallOption) (*TenantIdentifiers, error)
	GetIdentifiersForGatewayEUI(ctx context.Context, in *GetTenantIdentifiersForGatewayEUIRequest, opts ...grpc.CallOption) (*TenantIdentifiers, error)
	GetIdentifiersForBillingIdentifiers(ctx context.Context, in *GetTenantIdentifiersForBillingIdentifiersRequest, opts ...grpc.CallOption) (*TenantIdentifiers, error)
}

type tenantRegistryClient struct {
	cc *grpc.ClientConn
}

func NewTenantRegistryClient(cc *grpc.ClientConn) TenantRegistryClient {
	return &tenantRegistryClient{cc}
}

func (c *tenantRegistryClient) Create(ctx context.Context, in *CreateTenantRequest, opts ...grpc.CallOption) (*Tenant, error) {
	out := new(Tenant)
	err := c.cc.Invoke(ctx, "/tti.lorawan.v3.TenantRegistry/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tenantRegistryClient) Get(ctx context.Context, in *GetTenantRequest, opts ...grpc.CallOption) (*Tenant, error) {
	out := new(Tenant)
	err := c.cc.Invoke(ctx, "/tti.lorawan.v3.TenantRegistry/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tenantRegistryClient) GetRegistryTotals(ctx context.Context, in *GetTenantRegistryTotalsRequest, opts ...grpc.CallOption) (*TenantRegistryTotals, error) {
	out := new(TenantRegistryTotals)
	err := c.cc.Invoke(ctx, "/tti.lorawan.v3.TenantRegistry/GetRegistryTotals", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tenantRegistryClient) List(ctx context.Context, in *ListTenantsRequest, opts ...grpc.CallOption) (*Tenants, error) {
	out := new(Tenants)
	err := c.cc.Invoke(ctx, "/tti.lorawan.v3.TenantRegistry/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tenantRegistryClient) Update(ctx context.Context, in *UpdateTenantRequest, opts ...grpc.CallOption) (*Tenant, error) {
	out := new(Tenant)
	err := c.cc.Invoke(ctx, "/tti.lorawan.v3.TenantRegistry/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tenantRegistryClient) Delete(ctx context.Context, in *TenantIdentifiers, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/tti.lorawan.v3.TenantRegistry/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tenantRegistryClient) GetIdentifiersForEndDeviceEUIs(ctx context.Context, in *GetTenantIdentifiersForEndDeviceEUIsRequest, opts ...grpc.CallOption) (*TenantIdentifiers, error) {
	out := new(TenantIdentifiers)
	err := c.cc.Invoke(ctx, "/tti.lorawan.v3.TenantRegistry/GetIdentifiersForEndDeviceEUIs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tenantRegistryClient) GetIdentifiersForGatewayEUI(ctx context.Context, in *GetTenantIdentifiersForGatewayEUIRequest, opts ...grpc.CallOption) (*TenantIdentifiers, error) {
	out := new(TenantIdentifiers)
	err := c.cc.Invoke(ctx, "/tti.lorawan.v3.TenantRegistry/GetIdentifiersForGatewayEUI", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tenantRegistryClient) GetIdentifiersForBillingIdentifiers(ctx context.Context, in *GetTenantIdentifiersForBillingIdentifiersRequest, opts ...grpc.CallOption) (*TenantIdentifiers, error) {
	out := new(TenantIdentifiers)
	err := c.cc.Invoke(ctx, "/tti.lorawan.v3.TenantRegistry/GetIdentifiersForBillingIdentifiers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TenantRegistryServer is the server API for TenantRegistry service.
type TenantRegistryServer interface {
	Create(context.Context, *CreateTenantRequest) (*Tenant, error)
	Get(context.Context, *GetTenantRequest) (*Tenant, error)
	GetRegistryTotals(context.Context, *GetTenantRegistryTotalsRequest) (*TenantRegistryTotals, error)
	List(context.Context, *ListTenantsRequest) (*Tenants, error)
	Update(context.Context, *UpdateTenantRequest) (*Tenant, error)
	Delete(context.Context, *TenantIdentifiers) (*types.Empty, error)
	GetIdentifiersForEndDeviceEUIs(context.Context, *GetTenantIdentifiersForEndDeviceEUIsRequest) (*TenantIdentifiers, error)
	GetIdentifiersForGatewayEUI(context.Context, *GetTenantIdentifiersForGatewayEUIRequest) (*TenantIdentifiers, error)
	GetIdentifiersForBillingIdentifiers(context.Context, *GetTenantIdentifiersForBillingIdentifiersRequest) (*TenantIdentifiers, error)
}

// UnimplementedTenantRegistryServer can be embedded to have forward compatible implementations.
type UnimplementedTenantRegistryServer struct {
}

func (*UnimplementedTenantRegistryServer) Create(ctx context.Context, req *CreateTenantRequest) (*Tenant, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedTenantRegistryServer) Get(ctx context.Context, req *GetTenantRequest) (*Tenant, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedTenantRegistryServer) GetRegistryTotals(ctx context.Context, req *GetTenantRegistryTotalsRequest) (*TenantRegistryTotals, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRegistryTotals not implemented")
}
func (*UnimplementedTenantRegistryServer) List(ctx context.Context, req *ListTenantsRequest) (*Tenants, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedTenantRegistryServer) Update(ctx context.Context, req *UpdateTenantRequest) (*Tenant, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedTenantRegistryServer) Delete(ctx context.Context, req *TenantIdentifiers) (*types.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedTenantRegistryServer) GetIdentifiersForEndDeviceEUIs(ctx context.Context, req *GetTenantIdentifiersForEndDeviceEUIsRequest) (*TenantIdentifiers, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIdentifiersForEndDeviceEUIs not implemented")
}
func (*UnimplementedTenantRegistryServer) GetIdentifiersForGatewayEUI(ctx context.Context, req *GetTenantIdentifiersForGatewayEUIRequest) (*TenantIdentifiers, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIdentifiersForGatewayEUI not implemented")
}
func (*UnimplementedTenantRegistryServer) GetIdentifiersForBillingIdentifiers(ctx context.Context, req *GetTenantIdentifiersForBillingIdentifiersRequest) (*TenantIdentifiers, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIdentifiersForBillingIdentifiers not implemented")
}

func RegisterTenantRegistryServer(s *grpc.Server, srv TenantRegistryServer) {
	s.RegisterService(&_TenantRegistry_serviceDesc, srv)
}

func _TenantRegistry_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantRegistryServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tti.lorawan.v3.TenantRegistry/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantRegistryServer).Create(ctx, req.(*CreateTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TenantRegistry_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantRegistryServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tti.lorawan.v3.TenantRegistry/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantRegistryServer).Get(ctx, req.(*GetTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TenantRegistry_GetRegistryTotals_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTenantRegistryTotalsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantRegistryServer).GetRegistryTotals(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tti.lorawan.v3.TenantRegistry/GetRegistryTotals",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantRegistryServer).GetRegistryTotals(ctx, req.(*GetTenantRegistryTotalsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TenantRegistry_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTenantsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantRegistryServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tti.lorawan.v3.TenantRegistry/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantRegistryServer).List(ctx, req.(*ListTenantsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TenantRegistry_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTenantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantRegistryServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tti.lorawan.v3.TenantRegistry/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantRegistryServer).Update(ctx, req.(*UpdateTenantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TenantRegistry_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TenantIdentifiers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantRegistryServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tti.lorawan.v3.TenantRegistry/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantRegistryServer).Delete(ctx, req.(*TenantIdentifiers))
	}
	return interceptor(ctx, in, info, handler)
}

func _TenantRegistry_GetIdentifiersForEndDeviceEUIs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTenantIdentifiersForEndDeviceEUIsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantRegistryServer).GetIdentifiersForEndDeviceEUIs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tti.lorawan.v3.TenantRegistry/GetIdentifiersForEndDeviceEUIs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantRegistryServer).GetIdentifiersForEndDeviceEUIs(ctx, req.(*GetTenantIdentifiersForEndDeviceEUIsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TenantRegistry_GetIdentifiersForGatewayEUI_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTenantIdentifiersForGatewayEUIRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantRegistryServer).GetIdentifiersForGatewayEUI(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tti.lorawan.v3.TenantRegistry/GetIdentifiersForGatewayEUI",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantRegistryServer).GetIdentifiersForGatewayEUI(ctx, req.(*GetTenantIdentifiersForGatewayEUIRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TenantRegistry_GetIdentifiersForBillingIdentifiers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTenantIdentifiersForBillingIdentifiersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TenantRegistryServer).GetIdentifiersForBillingIdentifiers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tti.lorawan.v3.TenantRegistry/GetIdentifiersForBillingIdentifiers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TenantRegistryServer).GetIdentifiersForBillingIdentifiers(ctx, req.(*GetTenantIdentifiersForBillingIdentifiersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TenantRegistry_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tti.lorawan.v3.TenantRegistry",
	HandlerType: (*TenantRegistryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _TenantRegistry_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _TenantRegistry_Get_Handler,
		},
		{
			MethodName: "GetRegistryTotals",
			Handler:    _TenantRegistry_GetRegistryTotals_Handler,
		},
		{
			MethodName: "List",
			Handler:    _TenantRegistry_List_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _TenantRegistry_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _TenantRegistry_Delete_Handler,
		},
		{
			MethodName: "GetIdentifiersForEndDeviceEUIs",
			Handler:    _TenantRegistry_GetIdentifiersForEndDeviceEUIs_Handler,
		},
		{
			MethodName: "GetIdentifiersForGatewayEUI",
			Handler:    _TenantRegistry_GetIdentifiersForGatewayEUI_Handler,
		},
		{
			MethodName: "GetIdentifiersForBillingIdentifiers",
			Handler:    _TenantRegistry_GetIdentifiersForBillingIdentifiers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lorawan-stack/api/tti/tenant_services.proto",
}
